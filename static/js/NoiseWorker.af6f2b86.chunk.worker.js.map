{"version":3,"sources":["../webpack/bootstrap","../node_modules/noisejs/index.js","cubes/voxelField.ts","generation/terrain.ts","generation/noise.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","Noise","seed","Grad","x","y","z","this","dot2","dot3","grad3","perm","Array","gradP","Math","floor","v","F2","sqrt","G2","G3","fade","lerp","a","b","simplex2","xin","yin","i1","j1","j","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","gi3","t3","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w","setValue","field","size","noise","postProcess","getMaskedHeightmapValue","scale","multiplier","offset","maskScale","exponent","rawValue","pow","max","getStructureValue","structureCeilingValue","getStructureCeilingValue","highgroundValue","getHighgroundValue","getTerrainValue","getHeightmapValue","context","ev","Float32Array","px","py","pz","generateTerrainVoxels"],"mappings":"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","file":"static/js/NoiseWorker.af6f2b86.chunk.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/orbit-game/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\n(function(global){\n\n  // Passing in seed will seed this Noise instance\n  function Noise(seed) {\n    function Grad(x, y, z) {\n      this.x = x; this.y = y; this.z = z;\n    }\n\n    Grad.prototype.dot2 = function(x, y) {\n      return this.x*x + this.y*y;\n    };\n\n    Grad.prototype.dot3 = function(x, y, z) {\n      return this.x*x + this.y*y + this.z*z;\n    };\n\n    this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                 new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                 new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n\n    this.p = [151,160,137,91,90,15,\n    131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n    190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n    // To remove the need for index wrapping, double the permutation table length\n    this.perm = new Array(512);\n    this.gradP = new Array(512);\n\n    this.seed(seed || 0);\n  }\n\n  // This isn't a very good seeding function, but it works ok. It supports 2^16\n  // different seed values. Write something better if you need more seeds.\n  Noise.prototype.seed = function(seed) {\n    if(seed > 0 && seed < 1) {\n      // Scale the seed out\n      seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if(seed < 256) {\n      seed |= seed << 8;\n    }\n\n    var p = this.p;\n    for(var i = 0; i < 256; i++) {\n      var v;\n      if (i & 1) {\n        v = p[i] ^ (seed & 255);\n      } else {\n        v = p[i] ^ ((seed>>8) & 255);\n      }\n\n      var perm = this.perm;\n      var gradP = this.gradP;\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = this.grad3[v % 12];\n    }\n  };\n\n  /*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n  // Skewing and unskewing factors for 2, 3, and 4 dimensions\n  var F2 = 0.5*(Math.sqrt(3)-1);\n  var G2 = (3-Math.sqrt(3))/6;\n\n  var F3 = 1/3;\n  var G3 = 1/6;\n\n  // 2D simplex noise\n  Noise.prototype.simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin)*F2; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var t = (i+j)*G2;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      i1=1; j1=0;\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      i1=0; j1=1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var gi0 = gradP[i+perm[j]];\n    var gi1 = gradP[i+i1+perm[j+j1]];\n    var gi2 = gradP[i+1+perm[j+1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0*x0-y0*y0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n  };\n\n  // 3D simplex noise\n  Noise.prototype.simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin+zin)*F3; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var k = Math.floor(zin+s);\n\n    var t = (i+j+k)*G3;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    var z0 = zin-k+t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if(x0 >= y0) {\n      if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\n      else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\n      else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\n    } else {\n      if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\n      else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\n      else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n    var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n    var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n    var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.5 - x0*x0-y0*y0-z0*z0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1-z1*z1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2-z2*z2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.5 - x3*x3-y3*y3-z3*z3;\n    if(t3<0) {\n      n3 = 0;\n    } else {\n      t3 *= t3;\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n\n  };\n\n  // ##### Perlin noise stuff\n\n  function fade(t) {\n    return t*t*t*(t*(t*6-15)+10);\n  }\n\n  function lerp(a, b, t) {\n    return (1-t)*a + t*b;\n  }\n\n  // 2D Perlin Noise\n  Noise.prototype.perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X; y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var n00 = gradP[X+perm[Y]].dot2(x, y);\n    var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n    var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n    var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(\n        lerp(n00, n10, u),\n        lerp(n01, n11, u),\n       fade(y));\n  };\n\n  // 3D Perlin Noise\n  Noise.prototype.perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X; y = y - Y; z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255; Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n    var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n    var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n    var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n    var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n    var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n    var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n    var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n        lerp(\n          lerp(n000, n100, u),\n          lerp(n001, n101, u), w),\n        lerp(\n          lerp(n010, n110, u),\n          lerp(n011, n111, u), w),\n       v);\n  };\n\n  global.Noise = Noise;\n\n})(typeof module === \"undefined\" ? this : module.exports);\n","/**\n * Utilities for working with a packed voxel field\n */\n\nexport function setValue(\n  field: Float32Array,\n  size: number,\n  x: number,\n  y: number,\n  z: number,\n  value: number,\n) {\n  if (x >= size || x < 0 || y >= size || y < 0 || z >= size || z < 0) {\n    return;\n  }\n\n  field[x + y * size + z * size * size] = value;\n}\n\nexport function getValue(\n  field: Float32Array,\n  size: number,\n  x: number,\n  y: number,\n  z: number,\n) {\n  return field[x + y * size + z * size * size];\n}\n","import { setValue } from '../cubes/voxelField';\nimport n from 'noisejs';\n\nconst noise = new (n as any).Noise() as n;\nconst noiseScale3d = 1 / 16;\nconst absoluteCeiling = 8;\nconst heightmapScale = 72;\nconst heightmapHilliness = 16;\nconst heightmapFloor = -80;\nconst structureScale = 50;\nconst structureMultiplier = 150;\nconst structureCeilingScale = 30;\nconst structureCeilingMultiplier = 30;\nconst structureCeilingOffset = 20;\nconst structureMaskScale = 80;\nconst highgroundCeilingScale = 50;\nconst highgroundCeilingMultiplier = 300;\nconst highgroundCeilingOffset = 40;\nconst highgroundMaskScale = 120;\nconst highgroundExponent = 1.2;\n\nconst blocky = true;\n\nfunction postProcess(value: number) {\n  if (blocky) {\n    if (value > 0.01) return 1;\n    return 0;\n  }\n  return value;\n}\n\nfunction getMaskedHeightmapValue(\n  x: number,\n  y: number,\n  z: number,\n  {\n    scale,\n    multiplier,\n    offset,\n    maskScale,\n    exponent = 1,\n  }: {\n    scale: number;\n    multiplier: number;\n    offset: number;\n    maskScale: number;\n    exponent?: number;\n  },\n) {\n  const rawValue = Math.pow(\n    postProcess(noise.perlin2(x / scale + 1, z / scale + 1) * multiplier) +\n      offset,\n    exponent,\n  );\n\n  const mask2d = Math.max(\n    0,\n    noise.perlin2(x / maskScale, z / maskScale) * rawValue - y,\n  );\n\n  return rawValue * mask2d;\n}\n\nfunction getStructureCeilingValue(x: number, y: number, z: number) {\n  return getMaskedHeightmapValue(x, y, z, {\n    scale: structureCeilingScale,\n    multiplier: structureCeilingMultiplier,\n    offset: structureCeilingOffset,\n    maskScale: structureMaskScale,\n  });\n}\n\nfunction getHighgroundValue(x: number, y: number, z: number) {\n  return getMaskedHeightmapValue(x, y, z, {\n    scale: highgroundCeilingScale,\n    multiplier: highgroundCeilingMultiplier,\n    offset: highgroundCeilingOffset,\n    maskScale: highgroundMaskScale,\n    exponent: highgroundExponent,\n  });\n}\n\nfunction getStructureValue(x: number, y: number, z: number) {\n  const rawValue =\n    noise.perlin3(x / structureScale, y / structureScale, z / structureScale) *\n    structureMultiplier;\n  const structureCeilingValue = getStructureCeilingValue(x, y, z);\n  const highgroundValue = getHighgroundValue(x, y, z);\n  const ceilingValue = Math.max(structureCeilingValue, highgroundValue);\n  if (y > ceilingValue) return 0;\n  return rawValue;\n}\n\nfunction getHeightmapValue(x: number, y: number) {\n  return Math.floor(\n    noise.perlin2(x / heightmapScale + 1, y / heightmapScale + 1) *\n      heightmapHilliness +\n      heightmapFloor,\n  );\n}\n\nfunction getTerrainValue(x: number, y: number, z: number) {\n  let value = 0;\n  const heightmapValue = getHeightmapValue(x, z);\n  // fill in below heightmap\n  value = y < heightmapValue ? 1 : 0;\n\n  if (value === 0) {\n    // empty sky above heightmap\n    value = getStructureValue(x, y, z);\n  }\n\n  return postProcess(value);\n}\n\nexport function generateTerrainVoxels(\n  size: number,\n  offset: [number, number, number] = [0, 0, 0],\n) {\n  const field = new Float32Array(Math.pow(size, 3));\n\n  let px = 0,\n    py = 0,\n    pz = 0;\n  for (px = 0; px <= size; px++) {\n    const x = Math.floor(px + offset[0]);\n    for (py = 0; py <= size; py++) {\n      const y = Math.floor(py + offset[1]);\n      for (pz = 0; pz <= size; pz++) {\n        const z = Math.floor(pz + offset[2]);\n        setValue(field, size, px, py, pz, getTerrainValue(x, y, z));\n      }\n    }\n  }\n\n  return field;\n}\n\n// saved for future use - very thin and winding terrain\nexport function generateInterestingFeatures(\n  size: number,\n  offset: [number, number, number] = [0, 0, 0],\n) {\n  const field = new Float32Array(Math.pow(size, 3));\n\n  let px = 0,\n    py = 0,\n    pz = 0;\n  for (px = 0; px <= size; px++) {\n    const x = Math.floor(px + offset[0]);\n    for (py = 0; py <= size; py++) {\n      const y = Math.floor(py + offset[1]);\n      for (pz = 0; pz <= size; pz++) {\n        const z = Math.floor(pz + offset[2]);\n\n        const value3d = Math.max(\n          0,\n          noise.perlin3(x * noiseScale3d, y * noiseScale3d, z * noiseScale3d),\n        );\n\n        const heightMult = Math.pow(Math.max(0, absoluteCeiling - y), 3);\n        const value2d = Math.max(0, noise.perlin2(x / 8, z / 8));\n\n        const value = value3d * heightMult * value2d;\n\n        setValue(field, size, px, py, pz, value);\n      }\n    }\n  }\n\n  return field;\n}\n","import { generateTerrainVoxels } from './terrain';\nimport { NoiseWorkerInput } from './types';\n\nconst context = self; // eslint-disable-line no-restricted-globals\n\ncontext.addEventListener('message', function (ev) {\n  const { size, offset } = ev.data as NoiseWorkerInput;\n\n  const field = generateTerrainVoxels(size, offset);\n\n  (context as any).postMessage({ field });\n});\n"],"sourceRoot":""}